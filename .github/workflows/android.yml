name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v1.0.0)'
        required: false  # 允许不设置 tag_name
        default: 'v1.0.0'  # 默认版本号

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set Tag Name
      id: set_tag_name
      run: |
        # 如果提供了 tag_name 输入，则使用它，否则使用默认版本号
        if [[ -z "${{ github.event.inputs.tag_name }}" ]]; then
          TAG="v1.0.0"
        else
          TAG="${{ github.event.inputs.tag_name }}"
        fi
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Check if tag exists using GitHub API
      id: check_tag
      run: |
        TAG_EXISTS=$(curl -s "https://api.github.com/repos/${{ github.repository }}/tags" | jq -r '.[].name' | grep -w "${{ env.TAG }}" || true)
        if [ -z "$TAG_EXISTS" ]; then
          echo "Tag ${{ env.TAG }} does not exist. Proceeding with release creation."
          echo "TAG_EXISTS=false" >> $GITHUB_ENV
        else
          echo "Tag ${{ env.TAG }} already exists. Skipping release creation."
          echo "TAG_EXISTS=true" >> $GITHUB_ENV

    - name: Build with Gradle
      run: ./gradlew build

    - name: Create Release
      if: env.TAG_EXISTS == 'false'
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.TAG }}  # 使用自定义的标签名
        release_name: "Release ${{ env.TAG }}"
        body: "Release for version ${{ env.TAG }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK to Release
      if: env.TAG_EXISTS == 'false'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app/build/outputs/apk/debug/app-debug.apk
